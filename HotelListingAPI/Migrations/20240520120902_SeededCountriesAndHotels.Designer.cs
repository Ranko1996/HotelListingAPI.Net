// <auto-generated />
using HotelListingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListingAPI.Migrations
{
    [DbContext(typeof(HotelListingDbContext))]
    [Migration("20240520120902_SeededCountriesAndHotels")]
    partial class SeededCountriesAndHotels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelListingAPI.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jamaica",
                            ShortName = "JM"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Croatia",
                            ShortName = "HR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canada",
                            ShortName = "CA"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Australia",
                            ShortName = "AU"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Japan",
                            ShortName = "JP"
                        });
                });

            modelBuilder.Entity("HotelListingAPI.Data.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Beach Road, Kingston",
                            CountryId = 1,
                            Name = "Hotel Jamaica",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Coastal Avenue, Dubrovnik",
                            CountryId = 2,
                            Name = "Hotel Croatia",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Maple Street, Toronto",
                            CountryId = 3,
                            Name = "Hotel Canada",
                            Rating = 4.7000000000000002
                        },
                        new
                        {
                            Id = 4,
                            Address = "101 Kangaroo Lane, Sydney",
                            CountryId = 4,
                            Name = "Hotel Australia",
                            Rating = 4.5999999999999996
                        },
                        new
                        {
                            Id = 5,
                            Address = "202 Sakura Blvd, Tokyo",
                            CountryId = 5,
                            Name = "Hotel Japan",
                            Rating = 4.9000000000000004
                        });
                });

            modelBuilder.Entity("HotelListingAPI.Data.Hotel", b =>
                {
                    b.HasOne("HotelListingAPI.Data.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListingAPI.Data.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
